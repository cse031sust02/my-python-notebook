{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOtDZYcLlh5VmymAnmNvZqa",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/cse031sust02/my-python-notebook/blob/main/python-world/virtual_environment.ipnyb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Virtual Environment\n",
        "\n",
        "An \"environment\" in Python is the context in which a Python program runs. An environment consists of an interpreter and any number of installed packages. Because many programs are written specifically for a certain Python interpreter and makes use of a set of libraries, developers often create and manage an environment for individual programs.\n",
        "  \n",
        "By default, any Python interpreter run in its own \"global\" environment. Any packages that we install or uninstall affect the global environment.\n",
        "\n",
        "Over time, it become messy to work with global environment as there are many different packages installed for different projects. For this reason, developers often create a virtual environment for any given project.\n",
        "\n",
        "A virtual environment is a subfolder in a project that contains a copy of a specific interpreter. If we activate the virtual environment, any packages we install will be installed only in that environment's subfolder. So when we run a Python program within that environment, we know that it's running against only those specific packages.\n",
        "\n",
        "```\n",
        "$ sudo apt-get install python3-venv first\n",
        "$ python3 -m venv <env-name>\n",
        "$ source python3env/bin/activate\n",
        "```\n",
        "\n",
        "When we're ready to deploy the application to other computers, we can create a requirements.txt file with the command `pip freeze > requirements.txt`. The requirements file describes the packages we've installed in our virtual environment. With only this file, we or other developers can restore those packages using pip install -r requirements.txt. By using a requirements file, we need not commit the virtual environment itself to source control."
      ],
      "metadata": {
        "id": "9D0Aib4ZJBig"
      }
    }
  ]
}